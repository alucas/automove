
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def mcVersion="1.7.10"
def forgeVersion="${mcVersion}-10.13.0.1194"

def versionInfo = getGitVersion()
version = "${forgeVersion}-${versionInfo['Wakcraft.version']}"
group= "fr.alucas.minecraft"
archivesBaseName = "automove"

minecraft {
    version = "${forgeVersion}"
    if (file('../run').exists()) {
        assetDir = "../run/assets"
    } else {
        assetDir = "assets"
    }
}

dependencies
{
    compile 'com.google.code.findbugs:jsr305:1.3.9'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getGitVersion()
{
    def out = [:]

    // call git command.
    def outStream = new ByteArrayOutputStream()
    def result = exec {
        executable = 'git'
        args = [ 'describe', '--long', "--match=[^(jenkins)]*"]
        standardOutput = outStream
    }

    def fullVersion = outStream.toString().trim()
    def matcher = fullVersion =~ /(\d+).(\d+)-(\d+)-(.*)/

    def maj = matcher[0][1]
    def min = matcher[0][2]
    def rev = matcher[0][3]
    def bn = System.getenv("BUILD_NUMBER") ?: "1"

    out['Wakcraft.build.major.number'] = maj.toString()
    out['Wakcraft.build.minor.number'] = min.toString()
    out['Wakcraft.build.revision.number'] = rev.toString()
    out['Wakcraft.build.githash'] = matcher[0][4].toString()
    out['Wakcraft.build.number'] = bn.toString()
    out['Wakcraft.version'] = "${maj}.${min}.${rev}.${bn}".toString()

    return out
}